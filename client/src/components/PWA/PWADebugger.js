import React, { useState, useEffect } from 'react';\n\nconst PWADebugger = () => {\n  const [debugInfo, setDebugInfo] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n\n  useEffect(() => {\n    const checkPWAStatus = () => {\n      const info = {\n        // Basic environment\n        url: window.location.href,\n        protocol: window.location.protocol,\n        isLocalhost: window.location.hostname === 'localhost',\n        isHTTPS: window.location.protocol === 'https:',\n        \n        // Browser detection\n        userAgent: navigator.userAgent,\n        isChrome: navigator.userAgent.includes('Chrome'),\n        isEdge: navigator.userAgent.includes('Edge'),\n        isSafari: navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome'),\n        isFirefox: navigator.userAgent.includes('Firefox'),\n        \n        // PWA features\n        hasServiceWorker: 'serviceWorker' in navigator,\n        isStandalone: window.matchMedia('(display-mode: standalone)').matches,\n        hasNotifications: 'Notification' in window,\n        isOnline: navigator.onLine,\n        \n        // PWA state\n        swRegistration: null,\n        manifestData: null,\n        installPromptAvailable: false\n      };\n      \n      // Check service worker\n      if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.getRegistration().then(registration => {\n          setDebugInfo(prev => ({\n            ...prev,\n            swRegistration: registration ? {\n              scope: registration.scope,\n              state: registration.active?.state,\n              scriptURL: registration.active?.scriptURL\n            } : null\n          }));\n        });\n      }\n      \n      // Check manifest\n      fetch('/manifest.json')\n        .then(response => response.json())\n        .then(manifest => {\n          setDebugInfo(prev => ({ ...prev, manifestData: manifest }));\n        })\n        .catch(err => {\n          setDebugInfo(prev => ({ ...prev, manifestError: err.message }));\n        });\n      \n      setDebugInfo(info);\n    };\n    \n    checkPWAStatus();\n    \n    // Listen for PWA events\n    const handleInstallPrompt = (e) => {\n      setDebugInfo(prev => ({ ...prev, installPromptAvailable: true }));\n    };\n    \n    const handleAppInstalled = () => {\n      setDebugInfo(prev => ({ ...prev, isInstalled: true }));\n    };\n    \n    window.addEventListener('beforeinstallprompt', handleInstallPrompt);\n    window.addEventListener('appinstalled', handleAppInstalled);\n    \n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleInstallPrompt);\n      window.removeEventListener('appinstalled', handleAppInstalled);\n    };\n  }, []);\n  \n  const getStatusIcon = (condition) => condition ? '‚úÖ' : '‚ùå';\n  const getWarningIcon = (condition) => condition ? '‚úÖ' : '‚ö†Ô∏è';\n  \n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white border-2 border-gray-300 rounded-xl shadow-2xl p-4 max-w-sm z-50\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"font-bold text-lg flex items-center\">\n          üîß PWA Status\n        </h3>\n        <button\n          onClick={() => setShowDetails(!showDetails)}\n          className=\"text-gray-500 hover:text-gray-700\"\n        >\n          {showDetails ? 'üîΩ' : '‚ñ∂Ô∏è'}\n        </button>\n      </div>\n      \n      {/* Quick Status */}\n      <div className=\"space-y-2 text-sm\">\n        <div className=\"flex justify-between\">\n          <span>Secure (HTTPS):</span>\n          <span>{getStatusIcon(debugInfo.isHTTPS || debugInfo.isLocalhost)}</span>\n        </div>\n        <div className=\"flex justify-between\">\n          <span>PWA Browser:</span>\n          <span>{getStatusIcon(debugInfo.isChrome || debugInfo.isEdge)}</span>\n        </div>\n        <div className=\"flex justify-between\">\n          <span>Service Worker:</span>\n          <span>{getStatusIcon(debugInfo.hasServiceWorker)}</span>\n        </div>\n        <div className=\"flex justify-between\">\n          <span>Install Available:</span>\n          <span>{getStatusIcon(debugInfo.installPromptAvailable)}</span>\n        </div>\n        <div className=\"flex justify-between\">\n          <span>Already Installed:</span>\n          <span>{getStatusIcon(debugInfo.isStandalone)}</span>\n        </div>\n      </div>\n      \n      {/* Detailed Info */}\n      {showDetails && (\n        <div className=\"mt-4 pt-4 border-t border-gray-200 space-y-3\">\n          <div>\n            <h4 className=\"font-semibold text-xs text-gray-600 mb-1\">ENVIRONMENT</h4>\n            <div className=\"text-xs space-y-1 bg-gray-50 p-2 rounded\">\n              <div>URL: {debugInfo.url}</div>\n              <div>Protocol: {debugInfo.protocol}</div>\n              <div>Browser: {debugInfo.isChrome ? 'Chrome' : debugInfo.isEdge ? 'Edge' : debugInfo.isSafari ? 'Safari' : debugInfo.isFirefox ? 'Firefox' : 'Other'}</div>\n            </div>\n          </div>\n          \n          {debugInfo.manifestData && (\n            <div>\n              <h4 className=\"font-semibold text-xs text-gray-600 mb-1\">MANIFEST</h4>\n              <div className=\"text-xs space-y-1 bg-gray-50 p-2 rounded\">\n                <div>Name: {debugInfo.manifestData.name}</div>\n                <div>Icons: {debugInfo.manifestData.icons?.length || 0}</div>\n                <div>Display: {debugInfo.manifestData.display}</div>\n                <div>Start URL: {debugInfo.manifestData.start_url}</div>\n              </div>\n            </div>\n          )}\n          \n          {debugInfo.swRegistration && (\n            <div>\n              <h4 className=\"font-semibold text-xs text-gray-600 mb-1\">SERVICE WORKER</h4>\n              <div className=\"text-xs space-y-1 bg-gray-50 p-2 rounded\">\n                <div>State: {debugInfo.swRegistration.state}</div>\n                <div>Scope: {debugInfo.swRegistration.scope}</div>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"pt-2 border-t\">\n            <h4 className=\"font-semibold text-xs text-gray-600 mb-2\">MANUAL INSTALL</h4>\n            <div className=\"text-xs text-gray-600\">\n              {debugInfo.isChrome && (\n                <div>Chrome: Menu ‚Üí \"Install Vila Falo\"</div>\n              )}\n              {debugInfo.isEdge && (\n                <div>Edge: Address bar ‚Üí Install icon</div>\n              )}\n              {debugInfo.isSafari && (\n                <div>Safari: Share ‚Üí \"Add to Home Screen\"</div>\n              )}\n              <div className=\"mt-1 text-xs text-blue-600\">Or look for ‚äï in address bar</div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Quick Actions */}\n      <div className=\"mt-4 pt-3 border-t border-gray-200 space-y-2\">\n        <button\n          onClick={() => window.location.reload()}\n          className=\"w-full bg-blue-500 text-white px-3 py-2 rounded text-sm font-semibold hover:bg-blue-600\"\n        >\n          üîÑ Refresh Page\n        </button>\n        \n        <div className=\"grid grid-cols-2 gap-2\">\n          <button\n            onClick={() => {\n              if ('caches' in window) {\n                caches.keys().then(names => {\n                  names.forEach(name => caches.delete(name));\n                  alert('Cache cleared! Refresh the page.');\n                });\n              }\n            }}\n            className=\"bg-yellow-500 text-white px-2 py-1 rounded text-xs hover:bg-yellow-600\"\n          >\n            üóëÔ∏è Clear Cache\n          </button>\n          \n          <button\n            onClick={() => {\n              const info = `PWA Debug Info:\\n\\nHTTPS: ${debugInfo.isHTTPS}\\nBrowser: ${debugInfo.isChrome ? 'Chrome' : 'Other'}\\nSW: ${debugInfo.hasServiceWorker}\\nStandalone: ${debugInfo.isStandalone}\\nInstall Available: ${debugInfo.installPromptAvailable}`;\n              alert(info);\n            }}\n            className=\"bg-gray-500 text-white px-2 py-1 rounded text-xs hover:bg-gray-600\"\n          >\n            üìã Copy Info\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PWADebugger;